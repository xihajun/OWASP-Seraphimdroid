/**
 * Copyright (c) 2015 Lukhnos Liu
 *
 * Licensed under the MIT License.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

apply plugin: 'java'

sourceCompatibility = 1.7

repositories {
  mavenCentral()
  mavenLocal()
  flatDir { dirs 'libs' }
}

buildscript {
    repositories {
        flatDir dirs: 'libs'
    }
    dependencies {
        classpath ':proguard:'
    }
}

dependencies {
  compile 'org.apache.lucene:lucene-core:5.3.0-mobile-2'
  compile 'org.apache.lucene:lucene-queryparser:5.3.0-mobile-2'
  compile 'org.apache.lucene:lucene-analyzers-common:5.3.0-mobile-2'
  compile 'org.apache.lucene:lucene-suggest:5.3.0-mobile-2'
  compile 'org.apache.lucene:lucene-highlighter:5.3.0-mobile-2'
  compile 'org.json:json:20140107'

  // Transient depedencies: if these are not fetched via Maven, we have to list them explicitly.
  compile 'org.apache.lucene:lucene-join:5.3.0-mobile-2'
  compile 'org.apache.lucene:lucene-memory:5.3.0-mobile-2'
  compile 'org.apache.lucene:lucene-misc:5.3.0-mobile-2'
  compile 'org.apache.lucene:lucene-queries:5.3.0-mobile-2'
  compile 'org.apache.lucene:lucene-sandbox:5.3.0-mobile-2'

  testCompile 'junit:junit:4.11'
}

jar {
  // From http://cmoz.me/blog/2014/11/service-files-uber-jars-and-gradle/
  doFirst {
    def serviceDir = file("$buildDir/META-INF/services")
    serviceDir.deleteDir()
    serviceDir.mkdirs()

    // copy all service files from deps to buildDir
    for(file in configurations.runtime) {
      zipTree(file).matching{ include 'META-INF/services/*' }.each { f ->
        new File(serviceDir, f.name) << f.getText("UTF-8")
      }
    }
  }

  manifest {
    attributes "Main-Class": "org.owasp.lucenedroid.Lucene"
  }

  from(configurations.runtime.collect{ it.isDirectory() ? it : zipTree(it) }) {
    exclude 'META-INF/**' // Don't let Gradle merge service files
  }

  // Include service files from the buildDir.
  from fileTree(buildDir).matching{ include 'META-INF/services/*' }
}

/**
 * Create a 'testJar' so that the test classes can be used in downstream
 * projects. That is, another project's tests can depend on ours.
 *
 * See https://discuss.gradle.org/t/how-do-i-declare-a-dependency-on-a-modules-test-code/7172/9
 */
configurations {
  testArtifacts.extendsFrom testRuntime
}

task testJar(type: Jar) {
  classifier 'test'
  from sourceSets.test.output
}

artifacts {
  testArtifacts testJar
}

// https://github.com/loopj/proguard-gradle-example
task proguardJar(type: proguard.gradle.ProGuardTask, dependsOn: jar) {
    configuration 'proguard-rules.pro'
    injars jar.archivePath
    outjars "$jar.destinationDir/lucenestudy-shrunk.jar"
    printusage "$project.buildDir/deadcode.txt"
}
